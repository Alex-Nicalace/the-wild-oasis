import styled from 'styled-components';
import {
  Cell,
  Legend,
  Pie,
  PieChart,
  ResponsiveContainer,
  Tooltip,
} from 'recharts';

import { TStaysAfterDate } from '../../services/apiBookings';
import Heading from '../../ui/Heading';
import { useDarkModeContext } from '../../context/useDarkModeContext';

const ChartBox = styled.div`
  /* Box */
  background-color: var(--color-grey-0);
  border: 1px solid var(--color-grey-100);
  border-radius: var(--border-radius-md);

  padding: 2.4rem 3.2rem;
  grid-column: 3 / span 2;

  & > *:first-child {
    margin-bottom: 1.6rem;
  }

  & .recharts-pie-label-text {
    font-weight: 600;
  }
`;

const startDataLight = [
  {
    duration: '1 –Ω–æ—á—å',
    value: 0,
    color: '#ef4444',
  },
  {
    duration: '2 –Ω–æ—á–∏',
    value: 0,
    color: '#f97316',
  },
  {
    duration: '3 –Ω–æ—á–∏',
    value: 0,
    color: '#eab308',
  },
  {
    duration: '4-5 –Ω–æ—á–µ–π',
    value: 0,
    color: '#84cc16',
  },
  {
    duration: '6-7 –Ω–æ—á–µ–π',
    value: 0,
    color: '#22c55e',
  },
  {
    duration: '8-14 –Ω–æ—á–µ–π',
    value: 0,
    color: '#14b8a6',
  },
  {
    duration: '15-21 –Ω–æ—á–µ–π',
    value: 0,
    color: '#3b82f6',
  },
  {
    duration: '21+ –Ω–æ—á–µ–π',
    value: 0,
    color: '#a855f7',
  },
];

const startDataDark = [
  {
    duration: '1 –Ω–æ—á—å',
    value: 0,
    color: '#b91c1c',
  },
  {
    duration: '2 –Ω–æ—á–∏',
    value: 0,
    color: '#c2410c',
  },
  {
    duration: '3 –Ω–æ—á–∏',
    value: 0,
    color: '#a16207',
  },
  {
    duration: '4-5 –Ω–æ—á–µ–π',
    value: 0,
    color: '#4d7c0f',
  },
  {
    duration: '6-7 –Ω–æ—á–µ–π',
    value: 0,
    color: '#15803d',
  },
  {
    duration: '8-14 –Ω–æ—á–µ–π',
    value: 0,
    color: '#0f766e',
  },
  {
    duration: '15-21 –Ω–æ—á–µ–π',
    value: 0,
    color: '#1d4ed8',
  },
  {
    duration: '21+ –Ω–æ—á–µ–π',
    value: 0,
    color: '#7e22ce',
  },
];

type TStartData = typeof startDataLight;

function prepareData(startData: TStartData, stays: TStaysAfterDate) {
  // –ù–µ–º–Ω–æ–≥–æ —É—Ä–æ–¥–ª–∏–≤—ã–π –∫–æ–¥, –Ω–æ –∏–Ω–æ–≥–¥–∞ —ç—Ç–æ –∏–º–µ–Ω–Ω–æ —Ç–æ, —á—Ç–æ —Ç—Ä–µ–±—É–µ—Ç—Å—è –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å —Ä–µ–∞–ª—å–Ω—ã–º–∏ –¥–∞–Ω–Ω—ã–º–∏ üòÖ

  function incArrayValue(arr: TStartData, field: string) {
    return arr.map((obj) =>
      obj.duration === field ? { ...obj, value: obj.value + 1 } : obj
    );
  }

  const data = stays
    .reduce((arr, cur) => {
      const num = cur.numNights ?? -1;
      if (num === 1) return incArrayValue(arr, '1 –Ω–æ—á—å');
      if (num === 2) return incArrayValue(arr, '2 –Ω–æ—á–∏');
      if (num === 3) return incArrayValue(arr, '3 –Ω–æ—á–∏');
      if ([4, 5].includes(num)) return incArrayValue(arr, '4-5 –Ω–æ—á–µ–π');
      if ([6, 7].includes(num)) return incArrayValue(arr, '6-7 –Ω–æ—á–µ–π');
      if (num >= 8 && num <= 14) return incArrayValue(arr, '8-14 –Ω–æ—á–µ–π');
      if (num >= 15 && num <= 21) return incArrayValue(arr, '15-21 –Ω–æ—á–µ–π');
      if (num >= 21) return incArrayValue(arr, '21+ –Ω–æ—á–µ–π');
      return arr;
    }, startData)
    .filter((obj) => obj.value > 0);

  return data;
}

type DurationChartProps = {
  confirmedStays: TStaysAfterDate;
};
function DurationChart({ confirmedStays }: DurationChartProps): JSX.Element {
  const { isDarkMode } = useDarkModeContext();
  const startData = isDarkMode ? startDataDark : startDataLight;
  const data = prepareData(startData, confirmedStays);

  return (
    <ChartBox>
      <Heading as="h2">–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø—Ä–µ–±—ã–≤–∞–Ω–∏—è</Heading>
      <ResponsiveContainer width="100%" height={240}>
        <PieChart>
          <Pie
            data={data} // –ò—Å—Ö–æ–¥–Ω—ã–µ –¥–∞–Ω–Ω—ã–µ, –∫–∞–∂–¥—ã–π —ç–ª–µ–º–µ–Ω—Ç –∫–æ—Ç–æ—Ä—ã—Ö —è–≤–ª—è–µ—Ç—Å—è –æ–±—ä–µ–∫—Ç–æ–º
            dataKey="value" // –∑–Ω–∞—á–µ–Ω–∏—è –∫–∞–∂–¥–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞
            nameKey="duration" //–∏–º—è –∫–∞–∂–¥–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞
            innerRadius={85} // –í–Ω—É—Ç—Ä–µ–Ω–Ω–∏–π —Ä–∞–¥–∏—É—Å –≤—Å–µ—Ö —Å–µ–∫—Ç–æ—Ä–æ–≤. Percentage | Number
            outerRadius={110} // –í–Ω–µ—à–Ω–∏–π —Ä–∞–¥–∏—É—Å –≤—Å–µ—Ö —Å–µ–∫—Ç–æ—Ä–æ–≤. Percentage | Number
            cx="40%" // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ X —Ü–µ–Ω—Ç—Ä–∞. Percentage | Number
            cy="50%" // –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞ Y —Ü–µ–Ω—Ç—Ä–∞. Percentage | Number
            paddingAngle={3} // –£–≥–æ–ª –º–µ–∂–¥—É –¥–≤—É–º—è —Å–µ–∫—Ç–æ—Ä–∞–º–∏. Percentage | Number

            // –ö–æ–º–ø–æ–Ω–µ–Ω—Ç Pie —Å–æ–º–æ–¥–æ—Å—Ç–∞—Ç–æ—á–µ–Ω. –î–ª—è –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –¥–∏–∞–≥—Ä–∞–º–º—ã –¥–æ—Å—Ç–∞—Ç–æ—Å–Ω–æ —Å–∞–º–æ–∑–∞–∫—Ä—ã–≤–∞—é—â–µ–≥–æ—Å—è <Pie />.
            // –ù–æ –µ—Å–ª–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ –≤–ª–∏—è—Ç—å –Ω–∞ –æ—Ç—Ä–∏—Å–æ–≤–∫—É –æ—Ç–¥–µ–ª—å–Ω—ã—Ö —Å–µ–∫—Ç–æ—Ä–æ–≤, —Ç–æ –≤–Ω—É—Ç—Ä–∏ Pie –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, Cell)
          >
            {data.map((entry) => (
              <Cell
                key={entry.duration}
                fill={entry.color} // –¶–≤–µ—Ç —Å–µ–∫—Ç–æ—Ä–∞
                stroke={entry.color} // –¶–≤–µ—Ç –∫–æ–Ω—Ç—É—Ä–∞ —Å–µ–∫—Ç–æ—Ä–∞
              />
            ))}
          </Pie>
          {/* –í—Å–ø–ª—ã–≤–∞—é—â–∞—è –ø–æ–¥—Å–∫–∞–∑–∫–∞ */}
          <Tooltip />
          <Legend // –†–∞—Å—à–∏—Ñ—Ä–æ–≤–∫–∞ –∫–∞–∂–¥–æ–≥–æ —Å–µ–∫—Ç–æ—Ä–∞
            verticalAlign="middle" // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ª–µ–≥–µ–Ω–¥—ã –ø–æ –≤–µ—Ä—Ç–∏–∫–∞–ª–∏.
            align="right" // –í—ã—Ä–∞–≤–Ω–∏–≤–∞–Ω–∏–µ –ª–µ–≥–µ–Ω–¥—ã –ø–æ –≥–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª–∏.
            layout="vertical" // –†–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–µ –ª–µ–≥–µ–Ω–¥—ã.
            iconSize={15} // –†–∞–∑–º–µ—Ä –∏–∫–æ–Ω–∫–∏.
            iconType="circle" // –¢–∏–ø –≤–Ω–µ—à–Ω–µ–≥–æ –≤–∏–¥–∞ –∏–∫–æ–Ω–∫–∏.
          />
        </PieChart>
      </ResponsiveContainer>
    </ChartBox>
  );
}

export default DurationChart;
